#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

#define DOUBLE_QUOTES      LS(0x1F)  // " ← @
#define AMPERSAND          LS(0x23)  // & ← ^
#define SINGLE_QUOTE       LS(0x24)  // ' ← &
#define LEFT_PARENTHESIS   LS(0x25)  // ( ← *
#define RIGHT_PARENTHESIS  LS(0x26)  // ) ← (
#define EQUAL              LS(0x2D)  // = ← _
#define CARET              0x2E      // ^ ← =
#define TILDE              LS(0x2E)  // ~ ← +
#define AT_SIGN            0x2F      // @ ← [
#define GRAVE              LS(0x2F)  // ` ← {
#define LEFT_BRACKET       0x30      // [ ← ]
#define LEFT_BRACE         LS(0x30)  // { ← }
#define RIGHT_BRACKET      0x31      // ] ← \

// #define RIGHT_BRACE        LS(0x31)  // } ← |
// } の入れ替えが正常動作しないため、コメントアウト

#define PLUS               LS(0x33)  // + ← :
#define COLON              0x34      // : ← '
#define ASTERISK           LS(0x34)  // * ← "
#define LANGUAGE_5         0x35      // 半角/全角 ← `
#define UNDERSCORE         LS(0x87)  // _ ←
#define BACKSLASH          0x89      // ¥ ←
#define PIPE               LS(0x89)  // | ←
#define LANGUAGE_4         0x90      // ひらがな ← LANG1

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        Layer_6 {
            bindings = <&mo 6>;
            key-positions = <0 9 39 40>;
        };

        SCROLL {
            bindings = <&mo 5>;
            key-positions = <0 1>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W      &kp E       &kp R    &kp T                                                                    &kp Y         &kp U  &kp I      &kp O       &kp P
&kp A         &kp S      &kp D       &kp F    &kp G             &kp LS(LG(S))               &mt LANGUAGE_4 LANGUAGE_5  &kp H         &kp J  &kp K      &kp L       &kp MINUS
&kp Z         &kp X      &kp C       &kp V    &kp B             &kp DELETE                  &kp BACKSPACE              &kp N         &kp M  &kp COMMA  &kp PERIOD  &kp BACKSLASH
&kp LEFT_WIN  &kp LCTRL  &kp LSHIFT  &kp TAB  &lt 3 UNDERSCORE  &lt_to_layer_0 2 SPACE      &lt_to_layer_0 1 ENTER     &kp LEFT_ALT                                &kp SLASH
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        SHORTCUT_ARROW {
            bindings = <
&mt LS(LC(ESCAPE)) ESC  &kp LC(W)       &mt LS(LG(S)) TILDE  &kp LC(R)       &kp LC(T)                                                             &trans        &kp HOME        &kp UP_ARROW    &kp END          &trans
&kp LC(A)               &kp LC(S)       &kp LC(D)            &kp LC(F)       &kp LC(G)         &trans                      &trans                  &trans        &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans
&kp LC(Z)               &kp LS(DELETE)  &kp LC(INSERT)       &kp LS(INSERT)  &kp LC(B)         &trans                      &trans                  &trans        &trans          &trans          &trans           &trans
&trans                  &trans          &trans               &trans          &lt 3 UNDERSCORE  &lt_to_layer_0 2 SPACE      &lt_to_layer_0 1 ENTER  &kp LEFT_ALT                                                   &trans
            >;
        };

        NUM {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &kp LEFT_BRACE                                                 &kp LC(RIGHT_BRACKET)  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp PLUS
&kp F11  &kp F4  &kp F5  &kp F6  &kp LEFT_BRACKET      &trans                      &trans       &kp RIGHT_BRACKET      &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp MINUS
&kp F10  &kp F1  &kp F2  &kp F3  &kp LEFT_PARENTHESIS  &kp NUMBER_0                &kp PERIOD   &kp RIGHT_PARENTHESIS  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp ASTERISK
&trans   &trans  &trans  &trans  &lt 3 UNDERSCORE      &lt_to_layer_0 2 SPACE      &lt 1 EQUAL  &kp LEFT_ALT                                                     &kp SLASH
            >;
        };

        layer_3 {
            bindings = <
&none   &none   &none   &none   &trans                                                                &trans        &kp SINGLE_QUOTE  &kp SEMICOLON      &kp COLON      &kp AT_SIGN
&none   &none   &none   &none   &trans            &trans                      &trans                  &trans        &kp DOLLAR        &kp PERCENT        &kp AMPERSAND  &kp CARET
&none   &none   &none   &none   &trans            &trans                      &trans                  &trans        &kp EXCLAMATION   &kp DOUBLE_QUOTES  &kp HASH       &kp TILDE
&trans  &trans  &trans  &trans  &lt 3 UNDERSCORE  &lt_to_layer_0 2 SPACE      &lt_to_layer_0 1 ENTER  &kp LEFT_ALT                                                      &none
            >;
        };

        MOUSE {
            bindings = <
&to_layer_0 Q  &to_layer_0 W  &to_layer_0 E  &to_layer_0 R    &to_layer_0 T                                                              &to_layer_0 Y         &to_layer_0 U  &to_layer_0 I      &to_layer_0 O  &to_layer_0 P
&to_layer_0 A  &to_layer_0 S  &to_layer_0 D  &to_layer_0 F    &to_layer_0 G           &to_layer_0 LS(LG(S))      &to_layer_0 LANGUAGE_5  &to_layer_0 H         &mkp MB1       &mkp MB3           &mkp MB2       &to_layer_0 MINUS
&to_layer_0 Z  &to_layer_0 X  &to_layer_0 C  &to_layer_0 V    &to_layer_0 B           &to_layer_0 DELETE         &to_layer_0 BACKSPACE   &to_layer_0 N         &mkp MB4       &to_layer_0 COMMA  &mkp MB5       &to_layer_0 BACKSLASH
&trans         &trans         &trans         &to_layer_0 TAB  &to_layer_0 UNDERSCORE  &to_layer_0 SPACE          &to_layer_0 ENTER       &to_layer_0 LEFT_ALT                                                   &to_layer_0 SLASH
            >;
        };

        SCROLL {
            bindings = <
&to_layer_0 Q         &to_layer_0 W      &kp LS(LCTRL)           &to_layer_0 R    &to_layer_0 T                                                              &to_layer_0 Y         &kp HOME        &kp UP_ARROW       &kp END             &to_layer_0 P
&to_layer_0 A         &to_layer_0 S      &to_layer_0 D           &to_layer_0 F    &to_layer_0 G           &to_layer_0 LS(LG(S))      &to_layer_0 LANGUAGE_5  &to_layer_0 H         &kp LEFT_ARROW  &kp DOWN_ARROW     &kp RIGHT_ARROW     &to_layer_0 MINUS
&to_layer_0 Z         &to_layer_0 X      &to_layer_0 C           &to_layer_0 V    &to_layer_0 B           &to_layer_0 DELETE         &to_layer_0 BACKSPACE   &to_layer_0 N         &to_layer_0 M   &to_layer_0 COMMA  &to_layer_0 PERIOD  &to_layer_0 BACKSLASH
&to_layer_0 LEFT_WIN  &to_layer_0 LCTRL  &to_layer_0 LEFT_SHIFT  &to_layer_0 TAB  &to_layer_0 UNDERSCORE  &to_layer_0 SPACE          &to_layer_0 ENTER       &to_layer_0 LEFT_ALT                                                         &to_layer_0 SLASH
            >;
        };

        layer_6 {
            bindings = <
&to_layer_0 ESCAPE  &none  &none  &none  &none                                &none         &none         &none         &none         &none
&none               &none  &none  &none  &none  &none            &none        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&none               &none  &none  &none  &none  &bootloader      &bootloader  &none         &none         &none         &none         &bt BT_CLR
&none               &none  &none  &none  &none  &none            &none        &none                                                   &bt BT_CLR_ALL
            >;
        };
    };
};
